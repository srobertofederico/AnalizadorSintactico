Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ERROR

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> assignment END_OF_LINE
Rule 5     statement -> declaration END_OF_LINE
Rule 6     statement -> if_statement
Rule 7     declaration -> VAR NAME
Rule 8     declaration -> VAR NAME ASSIGN expression
Rule 9     assignment -> NAME ASSIGN expression
Rule 10    if_statement -> IF LPAREN condition RPAREN block
Rule 11    if_statement -> IF LPAREN condition RPAREN block ELSE block
Rule 12    condition -> expression EQUALS expression
Rule 13    condition -> expression NOTEQUALS expression
Rule 14    condition -> expression LESSTHAN expression
Rule 15    condition -> expression GREATERTHAN expression
Rule 16    condition -> expression LESSEQUAL expression
Rule 17    condition -> expression GREATEREQUAL expression
Rule 18    block -> LBRACE statement_list RBRACE
Rule 19    expression -> expression PLUS term
Rule 20    expression -> expression MINUS term
Rule 21    expression -> term
Rule 22    term -> term TIMES factor
Rule 23    term -> term DIVIDE factor
Rule 24    term -> factor
Rule 25    factor -> NUMBER
Rule 26    factor -> NAME
Rule 27    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ASSIGN               : 8 9
DIVIDE               : 23
ELSE                 : 11
END_OF_LINE          : 4 5
EQUALS               : 12
ERROR                : 
GREATEREQUAL         : 17
GREATERTHAN          : 15
IF                   : 10 11
LBRACE               : 18
LESSEQUAL            : 16
LESSTHAN             : 14
LPAREN               : 10 11 27
MINUS                : 20
NAME                 : 7 8 9 26
NOTEQUALS            : 13
NUMBER               : 25
PLUS                 : 19
RBRACE               : 18
RPAREN               : 10 11 27
TIMES                : 22
VAR                  : 7 8
error                : 

Nonterminals, with rules where they appear

assignment           : 4
block                : 10 11 11
condition            : 10 11
declaration          : 5
expression           : 8 9 12 12 13 13 14 14 15 15 16 16 17 17 19 20 27
factor               : 22 23 24
if_statement         : 6
program              : 0
statement            : 2 3
statement_list       : 1 3 18
term                 : 19 20 21 22 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment END_OF_LINE
    (5) statement -> . declaration END_OF_LINE
    (6) statement -> . if_statement
    (9) assignment -> . NAME ASSIGN expression
    (7) declaration -> . VAR NAME
    (8) declaration -> . VAR NAME ASSIGN expression
    (10) if_statement -> . IF LPAREN condition RPAREN block
    (11) if_statement -> . IF LPAREN condition RPAREN block ELSE block

    NAME            shift and go to state 7
    VAR             shift and go to state 8
    IF              shift and go to state 9

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    declaration                    shift and go to state 5
    if_statement                   shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment END_OF_LINE
    (5) statement -> . declaration END_OF_LINE
    (6) statement -> . if_statement
    (9) assignment -> . NAME ASSIGN expression
    (7) declaration -> . VAR NAME
    (8) declaration -> . VAR NAME ASSIGN expression
    (10) if_statement -> . IF LPAREN condition RPAREN block
    (11) if_statement -> . IF LPAREN condition RPAREN block ELSE block

    $end            reduce using rule 1 (program -> statement_list .)
    NAME            shift and go to state 7
    VAR             shift and go to state 8
    IF              shift and go to state 9

    statement                      shift and go to state 10
    assignment                     shift and go to state 4
    declaration                    shift and go to state 5
    if_statement                   shift and go to state 6

state 3

    (2) statement_list -> statement .

    NAME            reduce using rule 2 (statement_list -> statement .)
    VAR             reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> assignment . END_OF_LINE

    END_OF_LINE     shift and go to state 11


state 5

    (5) statement -> declaration . END_OF_LINE

    END_OF_LINE     shift and go to state 12


state 6

    (6) statement -> if_statement .

    NAME            reduce using rule 6 (statement -> if_statement .)
    VAR             reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 7

    (9) assignment -> NAME . ASSIGN expression

    ASSIGN          shift and go to state 13


state 8

    (7) declaration -> VAR . NAME
    (8) declaration -> VAR . NAME ASSIGN expression

    NAME            shift and go to state 14


state 9

    (10) if_statement -> IF . LPAREN condition RPAREN block
    (11) if_statement -> IF . LPAREN condition RPAREN block ELSE block

    LPAREN          shift and go to state 15


state 10

    (3) statement_list -> statement_list statement .

    NAME            reduce using rule 3 (statement_list -> statement_list statement .)
    VAR             reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 11

    (4) statement -> assignment END_OF_LINE .

    NAME            reduce using rule 4 (statement -> assignment END_OF_LINE .)
    VAR             reduce using rule 4 (statement -> assignment END_OF_LINE .)
    IF              reduce using rule 4 (statement -> assignment END_OF_LINE .)
    $end            reduce using rule 4 (statement -> assignment END_OF_LINE .)
    RBRACE          reduce using rule 4 (statement -> assignment END_OF_LINE .)


state 12

    (5) statement -> declaration END_OF_LINE .

    NAME            reduce using rule 5 (statement -> declaration END_OF_LINE .)
    VAR             reduce using rule 5 (statement -> declaration END_OF_LINE .)
    IF              reduce using rule 5 (statement -> declaration END_OF_LINE .)
    $end            reduce using rule 5 (statement -> declaration END_OF_LINE .)
    RBRACE          reduce using rule 5 (statement -> declaration END_OF_LINE .)


state 13

    (9) assignment -> NAME ASSIGN . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    expression                     shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 14

    (7) declaration -> VAR NAME .
    (8) declaration -> VAR NAME . ASSIGN expression

    END_OF_LINE     reduce using rule 7 (declaration -> VAR NAME .)
    ASSIGN          shift and go to state 22


state 15

    (10) if_statement -> IF LPAREN . condition RPAREN block
    (11) if_statement -> IF LPAREN . condition RPAREN block ELSE block
    (12) condition -> . expression EQUALS expression
    (13) condition -> . expression NOTEQUALS expression
    (14) condition -> . expression LESSTHAN expression
    (15) condition -> . expression GREATERTHAN expression
    (16) condition -> . expression LESSEQUAL expression
    (17) condition -> . expression GREATEREQUAL expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    condition                      shift and go to state 23
    expression                     shift and go to state 24
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 16

    (26) factor -> NAME .

    TIMES           reduce using rule 26 (factor -> NAME .)
    DIVIDE          reduce using rule 26 (factor -> NAME .)
    PLUS            reduce using rule 26 (factor -> NAME .)
    MINUS           reduce using rule 26 (factor -> NAME .)
    END_OF_LINE     reduce using rule 26 (factor -> NAME .)
    EQUALS          reduce using rule 26 (factor -> NAME .)
    NOTEQUALS       reduce using rule 26 (factor -> NAME .)
    LESSTHAN        reduce using rule 26 (factor -> NAME .)
    GREATERTHAN     reduce using rule 26 (factor -> NAME .)
    LESSEQUAL       reduce using rule 26 (factor -> NAME .)
    GREATEREQUAL    reduce using rule 26 (factor -> NAME .)
    RPAREN          reduce using rule 26 (factor -> NAME .)


state 17

    (9) assignment -> NAME ASSIGN expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    END_OF_LINE     reduce using rule 9 (assignment -> NAME ASSIGN expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 18

    (21) expression -> term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    PLUS            reduce using rule 21 (expression -> term .)
    MINUS           reduce using rule 21 (expression -> term .)
    END_OF_LINE     reduce using rule 21 (expression -> term .)
    EQUALS          reduce using rule 21 (expression -> term .)
    NOTEQUALS       reduce using rule 21 (expression -> term .)
    LESSTHAN        reduce using rule 21 (expression -> term .)
    GREATERTHAN     reduce using rule 21 (expression -> term .)
    LESSEQUAL       reduce using rule 21 (expression -> term .)
    GREATEREQUAL    reduce using rule 21 (expression -> term .)
    RPAREN          reduce using rule 21 (expression -> term .)
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 19

    (24) term -> factor .

    TIMES           reduce using rule 24 (term -> factor .)
    DIVIDE          reduce using rule 24 (term -> factor .)
    PLUS            reduce using rule 24 (term -> factor .)
    MINUS           reduce using rule 24 (term -> factor .)
    END_OF_LINE     reduce using rule 24 (term -> factor .)
    EQUALS          reduce using rule 24 (term -> factor .)
    NOTEQUALS       reduce using rule 24 (term -> factor .)
    LESSTHAN        reduce using rule 24 (term -> factor .)
    GREATERTHAN     reduce using rule 24 (term -> factor .)
    LESSEQUAL       reduce using rule 24 (term -> factor .)
    GREATEREQUAL    reduce using rule 24 (term -> factor .)
    RPAREN          reduce using rule 24 (term -> factor .)


state 20

    (25) factor -> NUMBER .

    TIMES           reduce using rule 25 (factor -> NUMBER .)
    DIVIDE          reduce using rule 25 (factor -> NUMBER .)
    PLUS            reduce using rule 25 (factor -> NUMBER .)
    MINUS           reduce using rule 25 (factor -> NUMBER .)
    END_OF_LINE     reduce using rule 25 (factor -> NUMBER .)
    EQUALS          reduce using rule 25 (factor -> NUMBER .)
    NOTEQUALS       reduce using rule 25 (factor -> NUMBER .)
    LESSTHAN        reduce using rule 25 (factor -> NUMBER .)
    GREATERTHAN     reduce using rule 25 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 25 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 25 (factor -> NUMBER .)
    RPAREN          reduce using rule 25 (factor -> NUMBER .)


state 21

    (27) factor -> LPAREN . expression RPAREN
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    expression                     shift and go to state 29
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 22

    (8) declaration -> VAR NAME ASSIGN . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    expression                     shift and go to state 30
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 23

    (10) if_statement -> IF LPAREN condition . RPAREN block
    (11) if_statement -> IF LPAREN condition . RPAREN block ELSE block

    RPAREN          shift and go to state 31


state 24

    (12) condition -> expression . EQUALS expression
    (13) condition -> expression . NOTEQUALS expression
    (14) condition -> expression . LESSTHAN expression
    (15) condition -> expression . GREATERTHAN expression
    (16) condition -> expression . LESSEQUAL expression
    (17) condition -> expression . GREATEREQUAL expression
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    EQUALS          shift and go to state 32
    NOTEQUALS       shift and go to state 33
    LESSTHAN        shift and go to state 34
    GREATERTHAN     shift and go to state 35
    LESSEQUAL       shift and go to state 36
    GREATEREQUAL    shift and go to state 37
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 25

    (19) expression -> expression PLUS . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    term                           shift and go to state 38
    factor                         shift and go to state 19

state 26

    (20) expression -> expression MINUS . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    term                           shift and go to state 39
    factor                         shift and go to state 19

state 27

    (22) term -> term TIMES . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    factor                         shift and go to state 40

state 28

    (23) term -> term DIVIDE . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    factor                         shift and go to state 41

state 29

    (27) factor -> LPAREN expression . RPAREN
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          shift and go to state 42
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 30

    (8) declaration -> VAR NAME ASSIGN expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    END_OF_LINE     reduce using rule 8 (declaration -> VAR NAME ASSIGN expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 31

    (10) if_statement -> IF LPAREN condition RPAREN . block
    (11) if_statement -> IF LPAREN condition RPAREN . block ELSE block
    (18) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 44

    block                          shift and go to state 43

state 32

    (12) condition -> expression EQUALS . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    expression                     shift and go to state 45
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 33

    (13) condition -> expression NOTEQUALS . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    expression                     shift and go to state 46
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 34

    (14) condition -> expression LESSTHAN . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    expression                     shift and go to state 47
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 35

    (15) condition -> expression GREATERTHAN . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    expression                     shift and go to state 48
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 36

    (16) condition -> expression LESSEQUAL . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    expression                     shift and go to state 49
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 37

    (17) condition -> expression GREATEREQUAL . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . term
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) term -> . factor
    (25) factor -> . NUMBER
    (26) factor -> . NAME
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    NAME            shift and go to state 16
    LPAREN          shift and go to state 21

    expression                     shift and go to state 50
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 38

    (19) expression -> expression PLUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    PLUS            reduce using rule 19 (expression -> expression PLUS term .)
    MINUS           reduce using rule 19 (expression -> expression PLUS term .)
    END_OF_LINE     reduce using rule 19 (expression -> expression PLUS term .)
    EQUALS          reduce using rule 19 (expression -> expression PLUS term .)
    NOTEQUALS       reduce using rule 19 (expression -> expression PLUS term .)
    LESSTHAN        reduce using rule 19 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 19 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 19 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 19 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 19 (expression -> expression PLUS term .)
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 39

    (20) expression -> expression MINUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    PLUS            reduce using rule 20 (expression -> expression MINUS term .)
    MINUS           reduce using rule 20 (expression -> expression MINUS term .)
    END_OF_LINE     reduce using rule 20 (expression -> expression MINUS term .)
    EQUALS          reduce using rule 20 (expression -> expression MINUS term .)
    NOTEQUALS       reduce using rule 20 (expression -> expression MINUS term .)
    LESSTHAN        reduce using rule 20 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 20 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 20 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 20 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 20 (expression -> expression MINUS term .)
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 40

    (22) term -> term TIMES factor .

    TIMES           reduce using rule 22 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 22 (term -> term TIMES factor .)
    PLUS            reduce using rule 22 (term -> term TIMES factor .)
    MINUS           reduce using rule 22 (term -> term TIMES factor .)
    END_OF_LINE     reduce using rule 22 (term -> term TIMES factor .)
    EQUALS          reduce using rule 22 (term -> term TIMES factor .)
    NOTEQUALS       reduce using rule 22 (term -> term TIMES factor .)
    LESSTHAN        reduce using rule 22 (term -> term TIMES factor .)
    GREATERTHAN     reduce using rule 22 (term -> term TIMES factor .)
    LESSEQUAL       reduce using rule 22 (term -> term TIMES factor .)
    GREATEREQUAL    reduce using rule 22 (term -> term TIMES factor .)
    RPAREN          reduce using rule 22 (term -> term TIMES factor .)


state 41

    (23) term -> term DIVIDE factor .

    TIMES           reduce using rule 23 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 23 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 23 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 23 (term -> term DIVIDE factor .)
    END_OF_LINE     reduce using rule 23 (term -> term DIVIDE factor .)
    EQUALS          reduce using rule 23 (term -> term DIVIDE factor .)
    NOTEQUALS       reduce using rule 23 (term -> term DIVIDE factor .)
    LESSTHAN        reduce using rule 23 (term -> term DIVIDE factor .)
    GREATERTHAN     reduce using rule 23 (term -> term DIVIDE factor .)
    LESSEQUAL       reduce using rule 23 (term -> term DIVIDE factor .)
    GREATEREQUAL    reduce using rule 23 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 23 (term -> term DIVIDE factor .)


state 42

    (27) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    END_OF_LINE     reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 27 (factor -> LPAREN expression RPAREN .)


state 43

    (10) if_statement -> IF LPAREN condition RPAREN block .
    (11) if_statement -> IF LPAREN condition RPAREN block . ELSE block

    NAME            reduce using rule 10 (if_statement -> IF LPAREN condition RPAREN block .)
    VAR             reduce using rule 10 (if_statement -> IF LPAREN condition RPAREN block .)
    IF              reduce using rule 10 (if_statement -> IF LPAREN condition RPAREN block .)
    $end            reduce using rule 10 (if_statement -> IF LPAREN condition RPAREN block .)
    RBRACE          reduce using rule 10 (if_statement -> IF LPAREN condition RPAREN block .)
    ELSE            shift and go to state 51


state 44

    (18) block -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment END_OF_LINE
    (5) statement -> . declaration END_OF_LINE
    (6) statement -> . if_statement
    (9) assignment -> . NAME ASSIGN expression
    (7) declaration -> . VAR NAME
    (8) declaration -> . VAR NAME ASSIGN expression
    (10) if_statement -> . IF LPAREN condition RPAREN block
    (11) if_statement -> . IF LPAREN condition RPAREN block ELSE block

    NAME            shift and go to state 7
    VAR             shift and go to state 8
    IF              shift and go to state 9

    statement_list                 shift and go to state 52
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    declaration                    shift and go to state 5
    if_statement                   shift and go to state 6

state 45

    (12) condition -> expression EQUALS expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          reduce using rule 12 (condition -> expression EQUALS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 46

    (13) condition -> expression NOTEQUALS expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          reduce using rule 13 (condition -> expression NOTEQUALS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 47

    (14) condition -> expression LESSTHAN expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          reduce using rule 14 (condition -> expression LESSTHAN expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 48

    (15) condition -> expression GREATERTHAN expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          reduce using rule 15 (condition -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 49

    (16) condition -> expression LESSEQUAL expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          reduce using rule 16 (condition -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 50

    (17) condition -> expression GREATEREQUAL expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          reduce using rule 17 (condition -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26


state 51

    (11) if_statement -> IF LPAREN condition RPAREN block ELSE . block
    (18) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 44

    block                          shift and go to state 53

state 52

    (18) block -> LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment END_OF_LINE
    (5) statement -> . declaration END_OF_LINE
    (6) statement -> . if_statement
    (9) assignment -> . NAME ASSIGN expression
    (7) declaration -> . VAR NAME
    (8) declaration -> . VAR NAME ASSIGN expression
    (10) if_statement -> . IF LPAREN condition RPAREN block
    (11) if_statement -> . IF LPAREN condition RPAREN block ELSE block

    RBRACE          shift and go to state 54
    NAME            shift and go to state 7
    VAR             shift and go to state 8
    IF              shift and go to state 9

    statement                      shift and go to state 10
    assignment                     shift and go to state 4
    declaration                    shift and go to state 5
    if_statement                   shift and go to state 6

state 53

    (11) if_statement -> IF LPAREN condition RPAREN block ELSE block .

    NAME            reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN block ELSE block .)
    VAR             reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN block ELSE block .)
    IF              reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN block ELSE block .)
    $end            reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN block ELSE block .)
    RBRACE          reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN block ELSE block .)


state 54

    (18) block -> LBRACE statement_list RBRACE .

    ELSE            reduce using rule 18 (block -> LBRACE statement_list RBRACE .)
    NAME            reduce using rule 18 (block -> LBRACE statement_list RBRACE .)
    VAR             reduce using rule 18 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 18 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 18 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 18 (block -> LBRACE statement_list RBRACE .)

